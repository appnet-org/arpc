// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.6.1
// source: test.proto

package Test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Score         int32                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Content       []string               `protobuf:"bytes,4,rep,name=content,proto3" json:"content,omitempty"`
	Numbers       []int32                `protobuf:"varint,5,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TestRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TestRequest) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *TestRequest) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

type TestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          string                 `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *TestResponse) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

// Tests a message containing only fixed-length scalar types.
type TestFixedLen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FInt32        int32                  `protobuf:"varint,1,opt,name=f_int32,json=fInt32,proto3" json:"f_int32,omitempty"`
	FInt64        int64                  `protobuf:"varint,2,opt,name=f_int64,json=fInt64,proto3" json:"f_int64,omitempty"`
	FBool         bool                   `protobuf:"varint,3,opt,name=f_bool,json=fBool,proto3" json:"f_bool,omitempty"`
	FDouble       float64                `protobuf:"fixed64,4,opt,name=f_double,json=fDouble,proto3" json:"f_double,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestFixedLen) Reset() {
	*x = TestFixedLen{}
	mi := &file_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestFixedLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestFixedLen) ProtoMessage() {}

func (x *TestFixedLen) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestFixedLen.ProtoReflect.Descriptor instead.
func (*TestFixedLen) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *TestFixedLen) GetFInt32() int32 {
	if x != nil {
		return x.FInt32
	}
	return 0
}

func (x *TestFixedLen) GetFInt64() int64 {
	if x != nil {
		return x.FInt64
	}
	return 0
}

func (x *TestFixedLen) GetFBool() bool {
	if x != nil {
		return x.FBool
	}
	return false
}

func (x *TestFixedLen) GetFDouble() float64 {
	if x != nil {
		return x.FDouble
	}
	return 0
}

// Tests a message containing only variable-length scalar types.
type TestVariableLen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VString       string                 `protobuf:"bytes,1,opt,name=v_string,json=vString,proto3" json:"v_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestVariableLen) Reset() {
	*x = TestVariableLen{}
	mi := &file_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestVariableLen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVariableLen) ProtoMessage() {}

func (x *TestVariableLen) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVariableLen.ProtoReflect.Descriptor instead.
func (*TestVariableLen) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{3}
}

func (x *TestVariableLen) GetVString() string {
	if x != nil {
		return x.VString
	}
	return ""
}

// Tests a message containing repeated fields of both fixed and variable types.
type TestRepeated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RFixed        []int32                `protobuf:"varint,1,rep,packed,name=r_fixed,json=rFixed,proto3" json:"r_fixed,omitempty"`
	RVariable     []string               `protobuf:"bytes,2,rep,name=r_variable,json=rVariable,proto3" json:"r_variable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRepeated) Reset() {
	*x = TestRepeated{}
	mi := &file_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRepeated) ProtoMessage() {}

func (x *TestRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRepeated.ProtoReflect.Descriptor instead.
func (*TestRepeated) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{4}
}

func (x *TestRepeated) GetRFixed() []int32 {
	if x != nil {
		return x.RFixed
	}
	return nil
}

func (x *TestRepeated) GetRVariable() []string {
	if x != nil {
		return x.RVariable
	}
	return nil
}

// Tests that the generator correctly deal with mixed-ordered fields
type TestOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VFirst        string                 `protobuf:"bytes,1,opt,name=v_first,json=vFirst,proto3" json:"v_first,omitempty"`         // Variable
	FSecond       int32                  `protobuf:"varint,2,opt,name=f_second,json=fSecond,proto3" json:"f_second,omitempty"`     // Fixed
	RThird        []int32                `protobuf:"varint,3,rep,packed,name=r_third,json=rThird,proto3" json:"r_third,omitempty"` // Variable
	FFourth       int64                  `protobuf:"varint,4,opt,name=f_fourth,json=fFourth,proto3" json:"f_fourth,omitempty"`     // Fixed
	RFifth        []string               `protobuf:"bytes,5,rep,name=r_fifth,json=rFifth,proto3" json:"r_fifth,omitempty"`         // Variable
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestOrder) Reset() {
	*x = TestOrder{}
	mi := &file_test_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestOrder) ProtoMessage() {}

func (x *TestOrder) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestOrder.ProtoReflect.Descriptor instead.
func (*TestOrder) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{5}
}

func (x *TestOrder) GetVFirst() string {
	if x != nil {
		return x.VFirst
	}
	return ""
}

func (x *TestOrder) GetFSecond() int32 {
	if x != nil {
		return x.FSecond
	}
	return 0
}

func (x *TestOrder) GetRThird() []int32 {
	if x != nil {
		return x.RThird
	}
	return nil
}

func (x *TestOrder) GetFFourth() int64 {
	if x != nil {
		return x.FFourth
	}
	return 0
}

func (x *TestOrder) GetRFifth() []string {
	if x != nil {
		return x.RFifth
	}
	return nil
}

// Tests an empty message with no fields
type TestEmpty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestEmpty) Reset() {
	*x = TestEmpty{}
	mi := &file_test_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestEmpty) ProtoMessage() {}

func (x *TestEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestEmpty.ProtoReflect.Descriptor instead.
func (*TestEmpty) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{6}
}

// Inner message to be used for nesting.
type InnerMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InnerId       int32                  `protobuf:"varint,1,opt,name=inner_id,json=innerId,proto3" json:"inner_id,omitempty"`
	InnerText     string                 `protobuf:"bytes,2,opt,name=inner_text,json=innerText,proto3" json:"inner_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InnerMessage) Reset() {
	*x = InnerMessage{}
	mi := &file_test_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InnerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerMessage) ProtoMessage() {}

func (x *InnerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerMessage.ProtoReflect.Descriptor instead.
func (*InnerMessage) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{7}
}

func (x *InnerMessage) GetInnerId() int32 {
	if x != nil {
		return x.InnerId
	}
	return 0
}

func (x *InnerMessage) GetInnerText() string {
	if x != nil {
		return x.InnerText
	}
	return ""
}

// Tests a message containing nested message fields (singular and repeated).
type TestNested struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OuterId        int64                  `protobuf:"varint,1,opt,name=outer_id,json=outerId,proto3" json:"outer_id,omitempty"`
	SingularNested *InnerMessage          `protobuf:"bytes,2,opt,name=singular_nested,json=singularNested,proto3" json:"singular_nested,omitempty"`
	RepeatedNested []*InnerMessage        `protobuf:"bytes,3,rep,name=repeated_nested,json=repeatedNested,proto3" json:"repeated_nested,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestNested) Reset() {
	*x = TestNested{}
	mi := &file_test_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestNested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNested) ProtoMessage() {}

func (x *TestNested) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNested.ProtoReflect.Descriptor instead.
func (*TestNested) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{8}
}

func (x *TestNested) GetOuterId() int64 {
	if x != nil {
		return x.OuterId
	}
	return 0
}

func (x *TestNested) GetSingularNested() *InnerMessage {
	if x != nil {
		return x.SingularNested
	}
	return nil
}

func (x *TestNested) GetRepeatedNested() []*InnerMessage {
	if x != nil {
		return x.RepeatedNested
	}
	return nil
}

// Messages for demonstrating multi-level nesting.
type Level3Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FinalText     string                 `protobuf:"bytes,1,opt,name=final_text,json=finalText,proto3" json:"final_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level3Message) Reset() {
	*x = Level3Message{}
	mi := &file_test_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level3Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level3Message) ProtoMessage() {}

func (x *Level3Message) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level3Message.ProtoReflect.Descriptor instead.
func (*Level3Message) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{9}
}

func (x *Level3Message) GetFinalText() string {
	if x != nil {
		return x.FinalText
	}
	return ""
}

type Level2Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NestedLevel3  *Level3Message         `protobuf:"bytes,1,opt,name=nested_level3,json=nestedLevel3,proto3" json:"nested_level3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level2Message) Reset() {
	*x = Level2Message{}
	mi := &file_test_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level2Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level2Message) ProtoMessage() {}

func (x *Level2Message) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level2Message.ProtoReflect.Descriptor instead.
func (*Level2Message) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{10}
}

func (x *Level2Message) GetNestedLevel3() *Level3Message {
	if x != nil {
		return x.NestedLevel3
	}
	return nil
}

type TestDeepNested struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopLevelId    int32                  `protobuf:"varint,1,opt,name=top_level_id,json=topLevelId,proto3" json:"top_level_id,omitempty"`
	NestedLevel2  *Level2Message         `protobuf:"bytes,2,opt,name=nested_level2,json=nestedLevel2,proto3" json:"nested_level2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestDeepNested) Reset() {
	*x = TestDeepNested{}
	mi := &file_test_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDeepNested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDeepNested) ProtoMessage() {}

func (x *TestDeepNested) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDeepNested.ProtoReflect.Descriptor instead.
func (*TestDeepNested) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{11}
}

func (x *TestDeepNested) GetTopLevelId() int32 {
	if x != nil {
		return x.TopLevelId
	}
	return 0
}

func (x *TestDeepNested) GetNestedLevel2() *Level2Message {
	if x != nil {
		return x.NestedLevel2
	}
	return nil
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\x12\x04Test\"\x83\x01\n" +
	"\vTestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x05R\x05score\x12\x18\n" +
	"\acontent\x18\x04 \x03(\tR\acontent\x12\x18\n" +
	"\anumbers\x18\x05 \x03(\x05R\anumbers\"\"\n" +
	"\fTestResponse\x12\x12\n" +
	"\x04resp\x18\x01 \x01(\tR\x04resp\"r\n" +
	"\fTestFixedLen\x12\x17\n" +
	"\af_int32\x18\x01 \x01(\x05R\x06fInt32\x12\x17\n" +
	"\af_int64\x18\x02 \x01(\x03R\x06fInt64\x12\x15\n" +
	"\x06f_bool\x18\x03 \x01(\bR\x05fBool\x12\x19\n" +
	"\bf_double\x18\x04 \x01(\x01R\afDouble\",\n" +
	"\x0fTestVariableLen\x12\x19\n" +
	"\bv_string\x18\x01 \x01(\tR\avString\"F\n" +
	"\fTestRepeated\x12\x17\n" +
	"\ar_fixed\x18\x01 \x03(\x05R\x06rFixed\x12\x1d\n" +
	"\n" +
	"r_variable\x18\x02 \x03(\tR\trVariable\"\x8c\x01\n" +
	"\tTestOrder\x12\x17\n" +
	"\av_first\x18\x01 \x01(\tR\x06vFirst\x12\x19\n" +
	"\bf_second\x18\x02 \x01(\x05R\afSecond\x12\x17\n" +
	"\ar_third\x18\x03 \x03(\x05R\x06rThird\x12\x19\n" +
	"\bf_fourth\x18\x04 \x01(\x03R\afFourth\x12\x17\n" +
	"\ar_fifth\x18\x05 \x03(\tR\x06rFifth\"\v\n" +
	"\tTestEmpty\"H\n" +
	"\fInnerMessage\x12\x19\n" +
	"\binner_id\x18\x01 \x01(\x05R\ainnerId\x12\x1d\n" +
	"\n" +
	"inner_text\x18\x02 \x01(\tR\tinnerText\"\xa1\x01\n" +
	"\n" +
	"TestNested\x12\x19\n" +
	"\bouter_id\x18\x01 \x01(\x03R\aouterId\x12;\n" +
	"\x0fsingular_nested\x18\x02 \x01(\v2\x12.Test.InnerMessageR\x0esingularNested\x12;\n" +
	"\x0frepeated_nested\x18\x03 \x03(\v2\x12.Test.InnerMessageR\x0erepeatedNested\".\n" +
	"\rLevel3Message\x12\x1d\n" +
	"\n" +
	"final_text\x18\x01 \x01(\tR\tfinalText\"I\n" +
	"\rLevel2Message\x128\n" +
	"\rnested_level3\x18\x01 \x01(\v2\x13.Test.Level3MessageR\fnestedLevel3\"l\n" +
	"\x0eTestDeepNested\x12 \n" +
	"\ftop_level_id\x18\x01 \x01(\x05R\n" +
	"topLevelId\x128\n" +
	"\rnested_level2\x18\x02 \x01(\v2\x13.Test.Level2MessageR\fnestedLevel22<\n" +
	"\vTestService\x12-\n" +
	"\x04Test\x12\x11.Test.TestRequest\x1a\x12.Test.TestResponseB\bZ\x06./Testb\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_test_proto_goTypes = []any{
	(*TestRequest)(nil),     // 0: Test.TestRequest
	(*TestResponse)(nil),    // 1: Test.TestResponse
	(*TestFixedLen)(nil),    // 2: Test.TestFixedLen
	(*TestVariableLen)(nil), // 3: Test.TestVariableLen
	(*TestRepeated)(nil),    // 4: Test.TestRepeated
	(*TestOrder)(nil),       // 5: Test.TestOrder
	(*TestEmpty)(nil),       // 6: Test.TestEmpty
	(*InnerMessage)(nil),    // 7: Test.InnerMessage
	(*TestNested)(nil),      // 8: Test.TestNested
	(*Level3Message)(nil),   // 9: Test.Level3Message
	(*Level2Message)(nil),   // 10: Test.Level2Message
	(*TestDeepNested)(nil),  // 11: Test.TestDeepNested
}
var file_test_proto_depIdxs = []int32{
	7,  // 0: Test.TestNested.singular_nested:type_name -> Test.InnerMessage
	7,  // 1: Test.TestNested.repeated_nested:type_name -> Test.InnerMessage
	9,  // 2: Test.Level2Message.nested_level3:type_name -> Test.Level3Message
	10, // 3: Test.TestDeepNested.nested_level2:type_name -> Test.Level2Message
	0,  // 4: Test.TestService.Test:input_type -> Test.TestRequest
	1,  // 5: Test.TestService.Test:output_type -> Test.TestResponse
	5,  // [5:6] is the sub-list for method output_type
	4,  // [4:5] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
