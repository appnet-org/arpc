// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package benchmark

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type RuntimeEnvInfo struct {
	_tab flatbuffers.Table
}

func GetRootAsRuntimeEnvInfo(buf []byte, offset flatbuffers.UOffsetT) *RuntimeEnvInfo {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &RuntimeEnvInfo{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *RuntimeEnvInfo) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *RuntimeEnvInfo) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *RuntimeEnvInfo) SerializedRuntimeEnv() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *RuntimeEnvInfo) Uris(obj *RuntimeEnvUris) *RuntimeEnvUris {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(RuntimeEnvUris)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *RuntimeEnvInfo) RuntimeEnvConfig(obj *RuntimeEnvConfig) *RuntimeEnvConfig {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(RuntimeEnvConfig)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func RuntimeEnvInfoStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func RuntimeEnvInfoAddSerializedRuntimeEnv(builder *flatbuffers.Builder, serializedRuntimeEnv flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(serializedRuntimeEnv), 0)
}
func RuntimeEnvInfoAddUris(builder *flatbuffers.Builder, uris flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(uris), 0)
}
func RuntimeEnvInfoAddRuntimeEnvConfig(builder *flatbuffers.Builder, runtimeEnvConfig flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(runtimeEnvConfig), 0)
}
func RuntimeEnvInfoEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
