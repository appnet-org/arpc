syntax = "proto3";

package symphony;
option go_package = "./symphony";

message RuntimeEnvUris {
  /// working dir uri
  string working_dir_uri = 1;
  /// python modules uris
  repeated string py_modules_uris = 2;
}

/// The runtime env config, include some fields that do not
/// participate in the calculation of the runtime_env hash.
message RuntimeEnvConfig {
  /// The timeout of runtime env creation.
  int32 setup_timeout_seconds = 1;
  /// Indicates whether to install runtime env eagerly before the workers are leased.
  bool eager_install = 2;
  /// A list of files to stream the runtime env setup logs to.
  repeated string log_files = 3;
}

/// The runtime env information which is transferred between ray core processes.
message RuntimeEnvInfo {
  /// The serialized runtime env passed from the user.
  string serialized_runtime_env = 1;
  /// URIs used in this runtime env. These will be used for reference counting.
  RuntimeEnvUris uris = 2;
  /// The serialized runtime env config passed from the user.
  RuntimeEnvConfig runtime_env_config = 3;
}
